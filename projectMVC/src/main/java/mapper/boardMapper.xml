<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardSQL">
  	<insert id="insertBoard" parameterType="map">

          <selectKey resultType="int" keyProperty="ref" order="BEFORE">
              select MAX(seq) + 1 from board
          </selectKey>
        INSERT INTO board(id, name, email, subject, content, ref)    
         VALUES(#{id}, #{name}, #{email},
         #{subject}, #{content}, (SELECT AUTO_INCREMENT FROM information_schema.TABLES WHERE TABLE_SCHEMA=DATABASE() AND TABLE_NAME='board'))
          <!-- ${ref} 대신에  LAST_INSERT_ID()를 쓰면 서버를 재가동했을 시에 0으로 초기화 되기 때문에 
           마지막 INSERT 값이 없으면 INCREMENT값을 가져오지 못한다. -->
      </insert>
  	
  	<select id="boardList" parameterType="map" resultType="board">
  		<!-- select * from (  select rownum rn, tt.*
				        from (select * from board 
				        order by ref desc, step)tt
				     ) -->
				<!-- <![CDATA[ where  rn >= #{startNum} and rn <= #{endNum} ]]> -->
				
				
<!-- 				 select * from (  select rownum rn, tt.*
				        from (select * from board 
				        order by ref desc, step)tt
				     )where  rn >= #{startNum} and rn <= #{endNum}
				     
				     select * from order by ref desc, step asc limit 시작위치(0부터 시작), 개수 -->
				<!-- <![CDATA[
				    
				      ]]> -->
				      <![CDATA[ select * from board order by ref desc, step asc limit ${startNum-1}, 5 ]]>
  	</select> 
  	
  	<select id="getTotalA" resultType="int">
  		select count(*) from board
  	</select>
  	
  	<!-- 1개의 글보기 -->
  	<select id="getBoard" parameterType="int" resultType="board">
  		select * from board where seq=#{seq}
  	</select>
  	<update id="updateBoard" parameterType="map">
  		update board set subject=#{subject}, content=#{content}, logtime=now() where seq=${seq}
  	</update>
  	
  	<update id="boardReplyStep" parameterType="board">
  		update board set step=step + 1 where ref=#{ref} and step > #{step}
  	</update>
  	
  	<update id="boardReply" parameterType="java.util.Map">
  		insert into board (id, name, email, subject, content, ref, lev, step, pseq, reply, hit, logtime) 
  					values(
  									#{id},
                                    #{name},
                                    #{email},
                                    #{subject},
                                    #{content},
                                    #{ref},
                                    #{lev},
                                    #{step},
                                    #{pseq},
                                    0,
                                    0,
                                    NOW());
  	</update>
  	
  	<update id="boardReplyReply" parameterType="int">
  		update board set reply = reply + 1 where seq = ${pseq}
  	</update>
  	
  	
  	<!-- 글삭제  -->
  	<!-- Oracle -->
  <!-- <delete id="boardDelete" parameterType="int">
    	begin
    	원글을 찾아서 원글의 reply(답글수) 감소
		update board set reply=reply-1 where seq=(select pseq from board where seq=#{seq});
    	답글을 찾아서 subject(제목) 추가 
    	update board set subject = '[원글이 삭제된 답글]' || subject where pseq=#{seq};
    	삭제
		delete board where seq=#{seq};
		end;
    </delete> -->
    
    <!-- MySQL -->
    <!-- boardDelete 프로시저 정의 -->
   <sql id="boardDeleteProcedure">
        create procedure boardDelete(in seq_val BIGINT)
        begin
            update board set subject = concat('[원글이 삭제된 답글]' , subject) where pseq=seq_val;

            update BOARD set reply = reply - 1
            where seq = (select p.pseq from (select pseq from board where seq = seq_val) as p);

            delete from board where seq = seq_val;
        end
        
        DELIMITER ;
    </sql>

  	<delete id="boardDelete" parameterType="int" statementType="CALLABLE">
        {call boardDelete(#{seq})}
    </delete>
    
  </mapper>
  
  
  
  
  
  